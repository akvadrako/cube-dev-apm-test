version: "3.3"
services:
  db:
    image: postgres:13.3 
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=metrics
    ports: [ '5432:5432' ]
    volumes:
      - ./data/db:/var/lib/postgresql/data

  minio:
    image: minio/minio:RELEASE.2023-03-09T23-16-13Z
    environment:
    - MINIO_ROOT_USER=user
    - MINIO_ROOT_PASSWORD=password
    entrypoint: ['/bin/sh', '-exc'] 
    command:
      - |
        mkdir -p /data/cubestore
        minio server /data --console-address=:9001
    ports: ['9000:9000', '9001:9001']
    volumes:
      - ./data/minio:/data

  redis:
    image: bitnami/redis:6.2.11
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    #logging: { driver: none }

  # Metric collectors
  collector_1:
    build: ./collector
    env_file: shared.env
    ports: ['5000:5000']
    volumes:
      - ./collector/main.js:/home/main.js
    depends_on:
      - db
 
  # Dashboard
  dash:
    build: ./dash
    command: ['yarn', 'start']
    ports:
      - 3000:3000
    volumes:
      - ./dash/src:/home/src
    depends_on:
      - api_1

  # API instances
  api_1:
    restart: always
    image: cubejs/cube:v0.32.3
    env_file: shared.env
    ports:
      - 4000:4000
    environment:
      - CUBEJS_AGENT_ENDPOINT_URL=ws://collector_1:5000
    depends_on:
      - db
      - router
      - redis
      - collector_1
    volumes:
      - ./schema:/cube/conf/schema
  
  api_2:
    restart: always
    image: cubejs/cube:v0.32.3
    env_file: shared.env
    ports:
      - 4001:4000
    environment:
      - CUBEJS_AGENT_ENDPOINT_URL=ws://collector_1:5000
    depends_on:
      - db
      - router
      - redis
      - collector_1
    volumes:
      - ./schema:/cube/conf/schema
  
  api_3:
    restart: always
    image: cubejs/cube:v0.32.3
    env_file: shared.env
    ports:
      - 4002:4000
    environment:
      - CUBEJS_AGENT_ENDPOINT_URL=ws://collector_1:5000
    depends_on:
      - db
      - router
      - redis
      - collector_1
    volumes:
      - ./schema:/cube/conf/schema
  
  api_4:
    restart: always
    image: cubejs/cube:v0.32.3
    env_file: shared.env
    ports:
      - 4003:4000
    environment:
      - CUBEJS_AGENT_ENDPOINT_URL=ws://collector_1:5000
    depends_on:
      - db
      - router
      - redis
      - collector_1
    volumes:
      - ./schema:/cube/conf/schema

  # Refresh workers
  refresh_1:
    image: cubejs/cube:v0.32.2
    restart: always
    env_file: shared.env
    environment:
      - CUBEJS_AGENT_ENDPOINT_URL=ws://collector_1:5000
      - CUBEJS_REFRESH_WORKER=true
    volumes:
      - ./schema:/cube/conf/schema
    depends_on:
      - db
      - router
      - redis
      - collector_1
  
  # CubeStore Router
  router:
    restart: always
    image: cubejs/cubestore:v0.32.3
    env_file: shared.env
    environment:
      - CUBESTORE_SERVER_NAME=router:9999
      - CUBESTORE_META_PORT=9999
    volumes:
      - ./data/store:/cube/data
    depends_on:
      - minio
      - redis

  # CubeStore Workers
  store_1:
    restart: always
    image: cubejs/cubestore:v0.32.3
    env_file: shared.env
    environment:
      - CUBESTORE_WORKER_PORT=9001
      - CUBESTORE_SERVER_NAME=store_1:9001
      - CUBESTORE_META_ADDR=router:9999
    depends_on:
      - router
    volumes:
      - ./data/store:/cube/data

  # Dev Container
  dev:
    command: ["sleep", "365d"]
    network_mode: host
    build: .devcontainer
    cap_add:
    - SYS_PTRACE
    security_opt:
    - seccomp:unconfined
    volumes:
    - ../:/work:cached
